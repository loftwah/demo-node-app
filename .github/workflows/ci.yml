name: ci

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Type check
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (GHCR)
        if: github.event_name != 'pull_request'
        run: |
          IMAGE=$(echo ghcr.io/${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          GIT_SHA=${GITHUB_SHA::7}
          if [[ "${{ github.ref }}" == refs/heads/main ]]; then
            docker build -t ${IMAGE}:staging -t ${IMAGE}:${GIT_SHA} .
            docker push ${IMAGE}:staging
            docker push ${IMAGE}:${GIT_SHA}
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF_NAME}
            docker build -t ${IMAGE}:${VERSION} -t ${IMAGE}:${GIT_SHA} .
            docker push ${IMAGE}:${VERSION}
            docker push ${IMAGE}:${GIT_SHA}
          else
            docker build -t ${IMAGE}:${GIT_SHA} .
            docker push ${IMAGE}:${GIT_SHA}
          fi
