image:
  repository: '139294524816.dkr.ecr.ap-southeast-2.amazonaws.com/demo-node-app'
  tag: 'staging'
  pullPolicy: Always

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: alb
  host: demo-node-app-eks.aws.deanlofts.xyz

env:
  APP_ENV: staging
  LOG_LEVEL: info
  DEPLOY_PLATFORM: eks
  PORT: '3000'
  S3_BUCKET: devops-refresher-staging-app-65d854
  DB_HOST: staging-app-postgres.c4msfqd2cnyb.ap-southeast-2.rds.amazonaws.com
  DB_PORT: '5432'
  DB_USER: app_user_staging
  DB_NAME: app_staging
  DB_SSL: required
  REDIS_HOST: master.staging-app-redis.hskbd9.apse2.cache.amazonaws.com
  REDIS_PORT: '6379'
  REDIS_TLS: 'true'
  REDIS_USERNAME: ''
  SELF_TEST_ON_BOOT: 'false'

secrets:
  DB_PASS: ''
  REDIS_PASS: ''

resources: {}

# Optional: pull env directly from AWS SSM/Secrets Manager via External Secrets Operator
externalSecrets:
  enabled: false
  # The Kubernetes Secret name to populate with all env vars
  targetSecretName: demo-node-app-env
  # Reference to an External Secrets store (assumes IRSA with ssm/secrets perms)
  storeRef:
    kind: ClusterSecretStore
    name: aws-parameterstore
  # Pull a whole SSM path (key prefix) into the Secret
  dataFrom:
    - extract:
        key: /devops-refresher/staging/app
  # Optionally add individual secrets (e.g., from Secrets Manager)
  # data:
  #   - secretKey: DB_PASS
  #     remoteRef:
  #       key: /devops-refresher/staging/app/DB_PASS
