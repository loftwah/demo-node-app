services:
  app:
    build: .
    image: demo-node-app:local
    environment:
      - APP_ENV=local
      - LOG_LEVEL=debug
      - PORT=3000
      - SELF_TEST_ON_BOOT=true
      - S3_BUCKET=local-bucket
      - AWS_REGION=us-east-1
      - S3_ENDPOINT=http://minio:9000
      - S3_FORCE_PATH_STYLE=true
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=app
      - DB_SSL=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASS=
      - REDIS_TLS=false
      - SEED_DB=true
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
      - minio
      - create-bucket
    command: ['node', 'dist/server.js']

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: ['redis-server', '--save', '', '--appendonly', 'no']

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: ['sh', '-c']
    command:
      [
        'until mc alias set local http://minio:9000 minioadmin minioadmin; do echo waiting for minio...; sleep 2; done; mc mb -p local/local-bucket || true',
      ]
